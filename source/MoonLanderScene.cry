import Graphics2D;
import Math;

class Sprite {
	field x = 0.0;
	field y = 0.0;
	field vx = 0.0;
	field vy = 0.0;
	field isDead = false;
	field isNear = false;
	
	constructor() {
		
	}
	
	function update(scene) {
		// TODO: collision
		this.vy += scene.currentGravity;
		
		this.x += this.vx;
		this.y += this.vy;
	}
	
	function render(cameraX, cameraY) {
		throw new Exception("Override me");
	}
}

class LanderShip : Sprite {

	constructor() : base() {
		
	}
	
	function render(cameraX, cameraY) {
		x = this.x - cameraX;
		y = this.y - cameraY;
		
		Draw.triangle(x - 10, y, x + 10, y, x, y - 16, 128, 128, 128);
	}
}

class MoonLanderScene : AbstractScene {
	
	field currentGravity = .2;
	field sprites = [];
	field player;
	field landscape;
	
	constructor() : base() {
		this.landscape = new Landscape('basic');
		this.player = new LanderShip();
		this.player.y = -800;
		this.sprites = [this.player];
	}
	
	function update(input) {
		
		for (sprite : this.sprites) {
			dx = sprite.x - this.player.x;
			dy = sprite.y - this.player.y;
			distance = (dx ** 2 + dy ** 2) ** .5;
			if (distance < 1500) {
				sprite.update(this);
				sprite.isNear = true;
			} else {
				sprite.isNear = false;
			}
		}
		
		if (input.pressed && input.y > 490) { // MAGIC NUMBER
			leftRightRatio = (input.x - 306) / 320.0;
			if (leftRightRatio >= 0 && leftRightRatio <= 1) {
				ratio = leftRightRatio * 2.0 - 1;
				
				this.player.vx += ratio * .4;
				
				lift = (1 - abs(ratio) * 2);
				if (lift > 0) {
					lift *= .33;
					this.player.vy -= lift;
				}
			}
		}
	}
	
	function render(rc) {
		cameraX = this.player.x - WIDTH / 2;
		cameraY = this.player.y - HEIGHT / 2;
		
		hud = ImageLibrary.get('lander_controls.png');
		
		Draw.fill(0, 0, 80);
		groundY = -cameraY;
		
		chunk = this.landscape.getChunkAt(cameraX); // get the chunk at the left side of the screen
		while (true) {
			px = chunk.absoluteX - cameraX;
			py = chunk.topY - cameraY;
			color = chunk.color;
			Draw.rectangle(px, py, chunk.width, chunk.height, color[0], color[1], color[2]);
			chunk = this.landscape.getChunkAt(chunk.absoluteX + chunk.width);
			if (chunk.absoluteX - cameraX - 200 > WIDTH) {
				break;
			}
		}
		
		for (sprite : this.sprites) {
			if (sprite.isNear) {
				sprite.render(cameraX, cameraY);
			}
		}
		
		hud.draw(0, HEIGHT - hud.height);
	}
}
